@model PagedList.IPagedList<RedLions.Presentation.Web.Models.Member>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Admin Interface - Members";
}

@section NavigationControls
{
    @{ Html.RenderPartial("_MembersControlPartial"); }
}




<h3>Members</h3>
<div>
    <table class="table">
        <thead>
        <tr>
            <th class="text-left">@Html.DisplayNameFor(model => model.FirstOrDefault().Username)</th>
            <th class="text-left">@Html.DisplayNameFor(model => model.FirstOrDefault().Email)</th>
            <th class="text-left">@Html.DisplayNameFor(model => model.FirstOrDefault().FullName)</th>
            <th class="text-left">@Html.DisplayNameFor(model => model.FirstOrDefault().CellphoneNumber)</th>
            <th class="text-left">@Html.DisplayNameFor(model => model.FirstOrDefault().RegisteredDateTime)</th>
            <th class="text-left">@Html.DisplayNameFor(model => model.FirstOrDefault().ReferralCount)</th>
            <th class="text-right">Action</th>
        </tr>
        </thead>

        <tbody>
            
        @foreach (var item in Model) {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Username)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                <td>@Html.DisplayFor(modelItem => item.CellphoneNumber)</td>
                <td class="right">@Html.DisplayFor(modelItem => item.RegisteredDateTime)</td>
                <td class="right">@Html.DisplayFor(modelItem => item.ReferralCount)</td>
                <td class="right text-right">
                    <a href="@Url.Action("Details", new { id=item.ID })">Details</a>
                </td>
            </tr>
        }
        </tbody>

        <tfoot></tfoot>

    </table>
</div>

<!-- Pagination Info -->
<p>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
</p>

<!-- Pagination Links -->
@Html.PagedListPager(
    list: Model, 
    generatePageUrl: page => Url.Action("Index", 
                             new { page, sortOrder = ViewBag.CurrentSort, searchMember = ViewBag.SearchUsername, }),
    options: new PagedListRenderOptions() { ContainerDivClasses = new List<string>() { "pagination" } })

<script type="text/javascript">
var url =
    {
        filterMembers : '@Url.Action("Index", "Members")',
    };
</script>

<!-- External Scripts -->
@Scripts.Render("~/Scripts/Custom/admin.members.index.js")